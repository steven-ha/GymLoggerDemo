{"version":3,"sources":["/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/$_lazy_route_resource lazy","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.module.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar-header/calendar-header.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar-header/calendar-header.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar-header/calendar-header.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar/calendar.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar/calendar.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar/calendar.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/home/home.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/home/home.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/home/home.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/login/login.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/login/login.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/login/login.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/logout/logout.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/logout/logout.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/logout/logout.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/navbar/navbar.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/navbar/navbar.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/navbar/navbar.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/profile/profile.component.css","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/profile/profile.component.html","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/profile/profile.component.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/guards/auth.guard.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/services/auth/user-auth.service.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/environments/environment.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/main.ts","/Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.component.ts","// ng specific\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// components\nimport { AppComponent } from './app.component';\nimport { CalendarComponent } from './components/calendar/calendar.component';\nimport { CalendarHeaderComponent } from './components/calendar-header/calendar-header.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LogoutComponent } from './components/logout/logout.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n// services\nimport { UserAuthService } from './services/auth/user-auth.service';\nimport { AuthGuard } from './guards/auth.guard';\n\n// angularx social login\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider, FacebookLoginProvider } from \"angularx-social-login\";\n\n\n// bootstrap\nimport {NgbModule, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n// angular calendar\nimport { CalendarModule } from 'angular-calendar';\n\n// add this file to .gitignore\n\n//config stuff\nlet config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"309159613841-ul4mrtd0a0mqsds7038868ubieiq8aso.apps.googleusercontent.com\")\n  },\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider(\"198132994096278\")\n  }\n]);\n\n// define ng routes\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'home', component: HomeComponent},\n  {path:'login', component: LoginComponent},\n  {path:'logout', component: LogoutComponent, canActivate:[AuthGuard]},\n  {path:'calendar', component: CalendarComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalendarComponent,\n    CalendarHeaderComponent,\n    HomeComponent,\n    LoginComponent,\n    LogoutComponent,\n    NavbarComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    SocialLoginModule.initialize(config),\n    BrowserAnimationsModule,\n    CalendarModule.forRoot(),\n    NgbModule.forRoot()\n  ],\n  providers: [AuthGuard, UserAuthService, NgbActiveModal],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".m-top{\\n  margin-top: 60px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar-header/calendar-header.component.css\n// module id = ../../../../../src/app/components/calendar-header/calendar-header.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row text-center m-top\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarPreviousView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"viewDateChange.next(viewDate)\\\">\\n        Previous\\n      </div>\\n      <div\\n        class=\\\"btn btn-outline-secondary\\\"\\n        mwlCalendarToday\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"viewDateChange.next(viewDate)\\\">\\n        Today\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        mwlCalendarNextView\\n        [view]=\\\"view\\\"\\n        [(viewDate)]=\\\"viewDate\\\"\\n        (viewDateChange)=\\\"viewDateChange.next(viewDate)\\\">\\n        Next\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"col-md-4\\\">\\n    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):locale  }}</h3>\\n  </div>\\n\\n\\n\\n\\n<!--\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"btn-group\\\">\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"viewChange.emit('month')\\\"\\n        [class.active]=\\\"view === 'month'\\\">\\n        Month\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"viewChange.emit('week')\\\"\\n        [class.active]=\\\"view === 'week'\\\">\\n        Week\\n      </div>\\n      <div\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"viewChange.emit('day')\\\"\\n        [class.active]=\\\"view === 'day'\\\">\\n        Day\\n      </div>\\n    </div>\\n  </div>\\n-->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar-header/calendar-header.component.html\n// module id = ../../../../../src/app/components/calendar-header/calendar-header.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-calendar-header',\n  templateUrl: './calendar-header.component.html',\n  styleUrls: ['./calendar-header.component.css']\n})\nexport class CalendarHeaderComponent{\n  @Input() view: string;\n\n  @Input() viewDate: Date;\n\n  @Input() locale: string = 'en';\n\n  @Output() viewChange: EventEmitter<string> = new EventEmitter();\n\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar-header/calendar-header.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".m-top-sm{\\n  margin-top: 10px;\\n}\\n.m-top-md{\\n  margin-top: 30px;\\n}\\n.m-top-lg{\\n  margin-top: 60px;\\n}\\n.m-btm-sm{\\n  margin-bottom: 10px;\\n}\\n.m-btm-md{\\n  margin-bottom: 30px;\\n}\\n.m-btm-lg{\\n  margin-bottom: 60px;\\n}\\n.m-btm-xlg{\\n  margin-bottom: 120px;\\n}\\n.cal-day-selected,\\n.cal-day-selected:hover {\\n  background-color: #faffad !important;\\n}\\n.right {\\n    position: absolute;\\n    right: 0px;\\n}\\n.pos-abs {\\n    position: absolute;\\n    right: 5px;\\n    bottom: 5px;\\n}\\n.pos-rel {\\n  position:relative;\\n}\\n.circle {\\n\\tborder-radius: 50%;\\n\\twidth: 60px;\\n\\theight: 60px;\\n  font-size: 30px;\\n  text-align: center;\\n  line-height: 45px;\\n}\\n.background-div{\\n  background-color: #f4f8ff;\\n}\\n.center{\\n  text-align: center;\\n}\\n.pad-vert-sm{\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n}\\n.pad-bottom-large{\\n  padding-bottom: 120px;\\n}\\n.side-margin{\\n  display: block;\\n  width: 50%;\\n  background-color: #f8f8ff;\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.side-margin-bottom{\\n  display: block;\\n  width: 75%;\\n  background-color: #add7ff;\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 30px;\\n  margin-bottom: 120px;\\n}\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n.ng-invalid:not(form)  {\\n  border-left: 5px solid #a94442; /* red */\\n}\\n:required  {\\nbackground: url(https://cdn0.iconfinder.com/data/icons/fugue/icon/asterisk-small.png) no-repeat;\\nbackground-position:right top;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar/calendar.component.css\n// module id = ../../../../../src/app/components/calendar/calendar.component.css\n// module chunks = main","module.exports = \"<!-- modal used for user input to create session -->\\n<ng-template #sessionModal let-close=\\\"close\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Create Session</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container\\\">\\n      <div [hidden]=\\\"submitted\\\">\\n\\n        <!-- form asking user to define session -->\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #sessionForm=\\\"ngForm\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                   required\\n                   minlength=\\\"4\\\"\\n                   [(ngModel)]=\\\"tempSessionName\\\" name=\\\"name\\\"\\n                   #name=\\\"ngModel\\\">\\n\\n            <!-- display alert if the user input is not sufficient -->\\n            <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <!-- user input cannot be empty -->\\n              <div *ngIf=\\\"name.errors.required\\\">\\n                Name is required.\\n              </div>\\n              <!-- input has to 4 characters or longer -->\\n              <div *ngIf=\\\"name.errors.minlength\\\">\\n                Name must be at least 4 characters long.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!sessionForm.form.valid\\\" (click)=\\\"createSession();\\\">Submit</button>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">Cancel</button>\\n  </div>\\n\\n</ng-template>\\n\\n<!-- modal used for user input to create session -->\\n<ng-template #updateSessionModal let-close=\\\"close\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Update Session</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container\\\">\\n      <div [hidden]=\\\"submitted\\\">\\n\\n        <!-- form asking user to define session -->\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #updateSessionForm=\\\"ngForm\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                   required\\n                   minlength=\\\"4\\\"\\n                   [(ngModel)]=\\\"tempSessionName\\\" name=\\\"name\\\"\\n                   #name=\\\"ngModel\\\"\\n                   >\\n\\n\\n\\n            <!-- display alert if the user input is not sufficient -->\\n            <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <!-- user input cannot be empty -->\\n              <div *ngIf=\\\"name.errors.required\\\">\\n                Name is required.\\n              </div>\\n              <!-- input has to 4 characters or longer -->\\n              <div *ngIf=\\\"name.errors.minlength\\\">\\n                Name must be at least 4 characters long.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- show update button only if the user touched the input field-->\\n          <button *ngIf=\\\"name.dirty\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!updateSessionForm.form.valid\\\" (click)=\\\"updateSession();\\\">Update</button>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">Cancel</button>\\n  </div>\\n\\n</ng-template>\\n\\n<!-- modal used for user input to create session -->\\n<ng-template #updateWorkoutModal let-close=\\\"close\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Update Workout</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container\\\">\\n      <div [hidden]=\\\"submitted\\\">\\n\\n        <!-- form asking user to define session -->\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #updateWorkoutForm=\\\"ngForm\\\">\\n\\n\\n          <!-- define group type -->\\n          <div *ngIf=\\\"currentGroup.type == 'Boulder'\\\" class=\\\"form-group\\\">\\n            <label for=\\\"grade\\\">Boulder Grade</label>\\n            <select class=\\\"form-control\\\"\\n                    required\\n                    [(ngModel)]=\\\"tempWorkoutName\\\"\\n                    #type=\\\"ngModel\\\"\\n                    name=\\\"grade\\\">\\n              <option value=\\\"\\\" selected default>--     select a grade    --</option>\\n              <option *ngFor=\\\"let grade of boulderGradeArr\\\" [ngValue]=\\\"grade\\\">{{ grade }}</option>\\n\\n            </select>\\n          </div>\\n\\n          <div *ngIf=\\\"currentGroup.type == 'Sport'\\\" class=\\\"form-group\\\">\\n            <label for=\\\"grade\\\">Sport Grade</label>\\n            <select class=\\\"form-control\\\"\\n                    required\\n                    [(ngModel)]=\\\"tempWorkoutName\\\"\\n                    #type=\\\"ngModel\\\"\\n                    name=\\\"grade\\\">\\n              <option value=\\\"\\\" selected default>--     select a grade    --</option>\\n              <option *ngFor=\\\"let grade of sportGradeArr\\\" [ngValue]=\\\"grade\\\">{{ grade }}</option>\\n\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"set\\\">Sets</label>\\n            <select class=\\\"form-control\\\"\\n              required\\n              [(ngModel)]=\\\"tempWorkoutSets\\\"\\n              #set=\\\"ngModel\\\"\\n              name=\\\"set\\\">\\n              <option *ngFor=\\\"let set of numArr\\\" [ngValue]=\\\"set\\\">{{ set }}</option>\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"reps\\\">Reps</label>\\n            <select class=\\\"form-control\\\"\\n              required\\n              [(ngModel)]=\\\"tempWorkoutReps\\\"\\n              #reps=\\\"ngModel\\\"\\n              name=\\\"reps\\\">\\n              <option *ngFor=\\\"let rep of numArr\\\" [ngValue]=\\\"rep\\\">{{ rep }}</option>\\n            </select>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!updateWorkoutForm.form.valid\\\" (click)=\\\"updateWorkout();\\\">Submit</button>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">Cancel</button>\\n  </div>\\n\\n</ng-template>\\n\\n<!-- modal used for user input to create group -->\\n<ng-template #groupModal let-close=\\\"close\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Create Group</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container\\\">\\n      <div [hidden]=\\\"submitted\\\">\\n\\n        <!-- form asking user to define session -->\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #groupForm=\\\"ngForm\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                   required\\n                   minlength=\\\"4\\\"\\n                   [(ngModel)]=\\\"tempGroupName\\\" name=\\\"name\\\"\\n                   #name=\\\"ngModel\\\">\\n\\n            <!-- display alert if the user input is not sufficient -->\\n            <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\"\\n                 class=\\\"alert alert-danger\\\">\\n              <!-- user input cannot be empty -->\\n              <div *ngIf=\\\"name.errors.required\\\">\\n                Name is required.\\n              </div>\\n              <!-- input has to 4 characters or longer -->\\n              <div *ngIf=\\\"name.errors.minlength\\\">\\n                Name must be at least 4 characters long.\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- define group type -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"type\\\">Workout Type</label>\\n            <select class=\\\"form-control\\\"\\n                    required\\n                    [(ngModel)]=\\\"tempGroupType\\\"\\n                    #type=\\\"ngModel\\\"\\n                    name=\\\"type\\\">\\n              <option value=\\\"\\\" selected default>--     select a type    --</option>\\n              <option *ngFor=\\\"let type of groupTypeArr\\\" [ngValue]=\\\"type\\\">{{ type }}</option>\\n\\n            </select>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!groupForm.form.valid\\\" (click)=\\\"createGroup();\\\">Submit</button>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"groupForm.reset(); close();\\\">Cancel</button>\\n  </div>\\n\\n</ng-template>\\n\\n<!-- modal used for user input to create boulder workout -->\\n<ng-template #boulderModal let-close=\\\"close\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Create Boulder Workout</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container\\\">\\n      <div [hidden]=\\\"submitted\\\">\\n\\n        <!-- form asking user to define session -->\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #boulderForm=\\\"ngForm\\\">\\n\\n\\n          <!-- define group type -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"grade\\\">Boulder Grade</label>\\n            <select class=\\\"form-control\\\"\\n                    required\\n                    [(ngModel)]=\\\"tempWorkoutName\\\"\\n                    #type=\\\"ngModel\\\"\\n                    name=\\\"grade\\\">\\n              <option value=\\\"\\\" selected default>--     select a grade    --</option>\\n              <option *ngFor=\\\"let grade of boulderGradeArr\\\" [ngValue]=\\\"grade\\\">{{ grade }}</option>\\n\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"set\\\">Sets</label>\\n            <select class=\\\"form-control\\\"\\n              required\\n              [(ngModel)]=\\\"tempWorkoutSets\\\"\\n              #set=\\\"ngModel\\\"\\n              name=\\\"set\\\">\\n              <option *ngFor=\\\"let set of numArr\\\" [ngValue]=\\\"set\\\">{{ set }}</option>\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"reps\\\">Reps</label>\\n            <select class=\\\"form-control\\\"\\n              required\\n              [(ngModel)]=\\\"tempWorkoutReps\\\"\\n              #reps=\\\"ngModel\\\"\\n              name=\\\"reps\\\">\\n              <option *ngFor=\\\"let rep of numArr\\\" [ngValue]=\\\"rep\\\">{{ rep }}</option>\\n            </select>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!boulderForm.form.valid\\\" (click)=\\\"createWorkout();\\\">Submit</button>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"boulderForm.reset(); close();\\\">Cancel</button>\\n  </div>\\n\\n</ng-template>\\n\\n\\n<!-- modal used for user input to create boulder workout -->\\n<ng-template #sportModal let-close=\\\"close\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h5 class=\\\"modal-title\\\">Create Sport Climbing Workout</h5>\\n    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"container\\\">\\n      <div [hidden]=\\\"submitted\\\">\\n\\n        <!-- form asking user to define session -->\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #sportForm=\\\"ngForm\\\">\\n\\n\\n          <!-- define group type -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"grade\\\">Sport Grade</label>\\n            <select class=\\\"form-control\\\"\\n                    required\\n                    [(ngModel)]=\\\"tempWorkoutName\\\"\\n                    #type=\\\"ngModel\\\"\\n                    name=\\\"grade\\\">\\n              <option value=\\\"\\\" selected default>--     select a grade    --</option>\\n              <option *ngFor=\\\"let grade of sportGradeArr\\\" [ngValue]=\\\"grade\\\">{{ grade }}</option>\\n\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"set\\\">Sets</label>\\n            <select class=\\\"form-control\\\"\\n              required\\n              [(ngModel)]=\\\"tempWorkoutSets\\\"\\n              #set=\\\"ngModel\\\"\\n              name=\\\"set\\\">\\n              <option *ngFor=\\\"let set of numArr\\\" [ngValue]=\\\"set\\\">{{ set }}</option>\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"reps\\\">Reps</label>\\n            <select class=\\\"form-control\\\"\\n              required\\n              [(ngModel)]=\\\"tempWorkoutReps\\\"\\n              #reps=\\\"ngModel\\\"\\n              name=\\\"reps\\\">\\n              <option *ngFor=\\\"let rep of numArr\\\" [ngValue]=\\\"rep\\\">{{ rep }}</option>\\n            </select>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!sportForm.form.valid\\\" (click)=\\\"createWorkout();\\\">Submit</button>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"boulderForm.reset(); close();\\\">Cancel</button>\\n  </div>\\n\\n</ng-template>\\n\\n<!-- calendar header -->\\n<app-calendar-header\\n  [(view)]=\\\"view\\\"\\n  [(viewDate)]=\\\"viewDate\\\"\\n  (viewDateChange)=\\\"updateMonth()\\\">\\n</app-calendar-header>\\n\\n<!-- calendar -->\\n<div class=\\\"container\\\">\\n  <div class=\\\"pos-rel\\\">\\n    <div [ngSwitch]=\\\"view\\\">\\n      <mwl-calendar-month-view\\n        *ngSwitchCase=\\\"'month'\\\"\\n        [viewDate]=\\\"viewDate\\\"\\n        [events]=\\\"events\\\"\\n        [refresh]=\\\"refresh\\\"\\n        [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n        (beforeViewRender)=\\\"beforeMonthViewRender($event)\\\"\\n        (dayClicked)=\\\"dayClicked($event.day)\\\">\\n      </mwl-calendar-month-view>\\n      <mwl-calendar-week-view\\n        *ngSwitchCase=\\\"'week'\\\"\\n        [viewDate]=\\\"viewDate\\\"\\n        [events]=\\\"events\\\">\\n      </mwl-calendar-week-view>\\n      <mwl-calendar-day-view\\n        *ngSwitchCase=\\\"'day'\\\"\\n        [viewDate]=\\\"viewDate\\\"\\n        [events]=\\\"events\\\"\\n        (beforeViewRender)=\\\"beforeDayViewRender($event.body)\\\"\\n        (hourSegmentClicked)=\\\"hourSegmentClicked($event.date)\\\">\\n      </mwl-calendar-day-view>\\n    </div>\\n    <a class=\\\"btn btn-primary pos-abs circle\\\" (click)=\\\"openSessionModal()\\\">+</a>\\n  </div>\\n</div>\\n\\n<!-- table used to display session data to user -->\\n<div  *ngIf=\\\"sessionId\\\" class=\\\"container m-top-md m-bottom-xlg\\\">\\n\\n  <div>\\n    <h1 class=\\\"center\\\">\\n      {{ sessionName }}\\n      <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\" (click)=\\\"openUpdateSessionModal()\\\"></i>\\n      <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeSession()\\\"></i>\\n    </h1>\\n\\n  </div>\\n\\n\\n  <!-- create a table for each group contained in the session -->\\n\\n  <div class=\\\"m-bottom-md background-div container no-gutters\\\" *ngFor=\\\"let group of groups, let i = index\\\">\\n    <div>\\n      <h3 class=\\\"center pad-vert-sm\\\" (click)=\\\"removeGroup(group)\\\">\\n        {{ group.name }} ({{ group.type }})\\n        <i class=\\\"fa fa-trash-o fa\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeGroup(group)\\\"></i>\\n      </h3>\\n    </div>\\n\\n    <table class=\\\"table table-bordered\\\">\\n\\n      <thead>\\n        <tr scope=\\\"row\\\">\\n          <th>Name</th>\\n          <th>Sets</th>\\n          <th>Reps</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n\\n      <!-- create row for each workout in the group -->\\n      <tbody>\\n        <tr scope=\\\"row\\\" *ngFor=\\\"let workout of group.workouts, let k = index\\\">\\n          <td>{{ workout.name }}</td>\\n          <td>{{ workout.sets }}</td>\\n          <td>{{ workout.reps }}</td>\\n          <td>\\n            <div style=\\\"text-align : right\\\">\\n              <a><i class=\\\"fa fa-pencil fa\\\" aria-hidden=\\\"true\\\" (click)=\\\"openUpdateWorkoutModal(workout, group, k, i)\\\"></i></a>\\n              <a><i class=\\\"fa fa-trash-o fa\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeWorkout(workout, group)\\\"></i></a>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n\\n      <tfoot>\\n        <tr scope=\\\"row\\\">\\n          <td colspan=\\\"4\\\" *ngIf=\\\"group.type == 'Boulder'\\\"><a class=\\\"btn btn-secondary side-margin\\\" (click)=\\\"openBoulderModal(group)\\\">Create Boulder Workout</a></td>\\n          <td colspan=\\\"4\\\" *ngIf=\\\"group.type == 'Sport'\\\"><a class=\\\"btn btn-secondary side-margin\\\" (click)=\\\"openSportModal(group)\\\">Create Sport Climbing Workout</a></td>\\n        </tr>\\n      </tfoot>\\n\\n    </table>\\n\\n  </div>\\n\\n  <!-- button to create a group for the session-->\\n  <a class=\\\"btn btn-primary side-margin-bottom\\\" (click)=\\\"openGroupModal()\\\">Create Group</a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar/calendar.component.html\n// module id = ../../../../../src/app/components/calendar/calendar.component.html\n// module chunks = main","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input, Output, EventEmitter, ViewChild,\n  TemplateRef\n} from '@angular/core';\nimport { UserAuthService } from '../../services/auth/user-auth.service';\nimport { User } from '../../models/users';\nimport {\n  CalendarEvent,\n  CalendarMonthViewDay,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent\n} from 'angular-calendar';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours\n} from 'date-fns';\nimport { DayViewHour } from 'calendar-utils';\nimport { Subject } from 'rxjs/Subject';\nimport { Session } from '../../models/sessions';\nimport { Group } from '../../models/groups';\nimport { Workout } from '../../models/workouts';\nimport { FormsModule }   from '@angular/forms';\n\nimport { CalendarHeaderComponent } from '../calendar-header/calendar-header.component';\n\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n@Component({\n  selector: 'app-calendar',\n  //changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n  @ViewChild('sessionModal') sessionModal: TemplateRef<any>;\n  @ViewChild('groupModal') groupModal: TemplateRef<any>;\n  @ViewChild('boulderModal') boulderModal: TemplateRef<any>;\n  @ViewChild('sportModal') sportModal: TemplateRef<any>;\n  @ViewChild('updateSessionModal') updateSessionModal: TemplateRef<any>;\n  @ViewChild('updateWorkoutModal') updateWorkoutModal: TemplateRef<any>;\n\n  constructor(private authService: UserAuthService, private modal: NgbModal, public activeModal: NgbActiveModal) {\n    // fill the numArr\n    for(let i=0; i<100; i++){\n      this.numArr.push(i);\n    }\n  }\n\n  ngOnInit() {\n    // set to today's date\n    this.selectedDate = new Date();\n\n    // get sessions for the current month/year\n    if(this.authService.userExists()){\n        this.getSessions();\n    }\n  }\n\n  // array used for select element\n  numArr =[];\n\n  //calendar variables\n  refresh: Subject<any> = new Subject();\n  view = 'month';\n  selectedDate: Date;\n  viewDate: Date = new Date();\n  selectedMonthViewDay: CalendarMonthViewDay;\n  selectedDayViewDate: Date;\n  dayView: DayViewHour[];\n  events: Array<CalendarEvent<{ id: String }>> = [];\n  activeDayIsOpen: boolean;\n  dayOn: boolean;\n\n  // current event that the user is viewing\n  currentEvent: CalendarEvent<{ id: String}>;\n\n  //session variables\n  sessionsArr: Session[];\n  sessionId:string;\n  sessionName: string;\n\n  //group variables\n  groupId = '5a63e8a12de4125cf5ae2edf';\n  groupName = 'Workout 1';\n  groupType = 'Boulder';\n  groups: Array<Group> = [];\n\n  groupTypeArr = [\n    'Boulder',\n    'Sport'\n  ];\n  boulderGradeArr = [\n    'VB',\n    'V0',\n    'V1',\n    'V2',\n    'V3',\n    'V4',\n    'V5',\n    'V6',\n    'V7',\n    'V8',\n    'V9',\n    'V10',\n    'V11',\n    'V12',\n    'V13',\n    'V14',\n    'V15',\n    'V16'\n  ];\n\n  sportGradeArr = [\n    '5.10a',\n    '5.10b',\n    '5.10c',\n    '5.10d',\n    '5.11a',\n    '5.11b',\n    '5.11c',\n    '5.11d',\n    '5.12a',\n    '5.12b',\n    '5.12c',\n    '5.12d',\n    '5.13a',\n    '5.13b',\n    '5.13c',\n    '5.13d',\n    '5.14a',\n    '5.14b',\n    '5.14c',\n    '5.14d',\n    '5.15a',\n    '5.15b',\n    '5.15c'\n  ]\n\n  // temp session variables\n  tempSessionName: string;\n  tempGroupName: string;\n  tempGroupType: string;\n\n  // temp workout variables\n  tempWorkoutID: string;\n  tempWorkoutName: string;\n  tempWorkoutReps: number;\n  tempWorkoutSets: number;\n  tempWorkoutDuration: number;\n\n  // current group user is viewing\n  currentGroup: Group;\n\n  // used to ref the modal that is openBoulderModal\n  currentModal: NgbActiveModal;\n\n  // index used to keep track of the workout / group that will be removed\n  workoutIndex: number;\n  groupIndex: number;\n\n\n  // close the current modal\n  onSubmit(): void {\n    this.currentModal.close();\n  }\n\n  // open session modal to create a session\n  openSessionModal():void{\n    this.currentModal = this.modal.open(this.sessionModal, { size: 'lg' });\n  }\n\n  // open the group modal to create a new group\n  openGroupModal():void{\n    this.currentModal = this.modal.open(this.groupModal, { size: 'lg'});\n  }\n\n  // open the modal to update the session\n  openUpdateSessionModal(): void{\n    this.tempSessionName = this.sessionName;\n    this.currentModal = this.modal.open(this.updateSessionModal, { size: 'lg' });\n  }\n\n  // open the boulder modal to create a new workout\n  openBoulderModal(group: Group): void{\n    this.currentGroup = group;\n    this.currentModal = this.modal.open(this.boulderModal, { size: 'lg'});\n  }\n\n  // open the sports modal to create a new workout\n  openSportModal(group: Group): void{\n    this.currentGroup = group;\n    this.currentModal = this.modal.open(this.sportModal, { size: 'lg'});\n  }\n\n  // open the workout modal to update the workout\n  openUpdateWorkoutModal(workout, group, workoutIndex, groupIndex): void{\n    this.tempWorkoutID = workout._id;\n    this.tempWorkoutName = workout.name;\n    this.tempWorkoutSets = workout.sets;\n    this.tempWorkoutReps = workout.reps;\n\n    this.workoutIndex = workoutIndex;\n    this.groupIndex = groupIndex;\n\n    this.currentGroup = group;\n    this.currentModal = this.modal.open(this.updateWorkoutModal, { size: 'lg'});\n  }\n\n  // remove the session\n  removeSession(): void{\n    this.authService.removeSession(this.sessionId).subscribe(\n      data => {\n        // clear the session\n        this.clearSession();\n\n        // remove the event that ref the session\n        this.events = this.events.filter(iEvent => iEvent !== this.currentEvent);\n        this.currentEvent = null;\n        this.activeDayIsOpen = false;\n        this.refresh.next();\n      },\n      (err) => {\n        console.log(err);\n      }\n    )\n  }\n\n  // remove the group\n  removeGroup(group): void {\n    this.authService.removeGroup(this.sessionId, group._id).subscribe(\n      (data) => {\n        // remove the group from the groups array\n        this.groups = this.groups.filter(iGroups => iGroups !== group);\n      },\n      (err) => {\n        console.log(err);\n      }\n    )\n  }\n\n  // remove the workout\n  removeWorkout(workout, group): void{\n    this.authService.removeWorkout(workout._id).subscribe(\n      (data) => {\n        // remove the workout from the group\n        group.workouts = group.workouts.filter(iGroup => iGroup !== workout);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n\n  }\n\n  // update the session\n  updateSession(): void{\n    this.authService.updateSession(this.sessionId, this.tempSessionName).subscribe(\n      (data)=>{\n        this.clearTempSession();\n        this.sessionName = data.name;\n        this.currentEvent.title = data.name;\n        this.refresh.next();\n      },\n      (err) => {\n        if(err.status == 401){\n          console.log('not authorized');\n          this.authService.signOut();\n        }\n      }\n    );\n  }\n\n  // update the workout\n  updateWorkout(): void{\n    this.authService.updateWorkout(this.tempWorkoutID, this.tempWorkoutName, this.tempWorkoutSets, this.tempWorkoutReps).subscribe(\n      (data) => {\n        this.groups[this.groupIndex].workouts[this.workoutIndex].name = this.tempWorkoutName;\n        this.groups[this.groupIndex].workouts[this.workoutIndex].sets = this.tempWorkoutSets;\n        this.groups[this.groupIndex].workouts[this.workoutIndex].reps = this.tempWorkoutReps;\n      },\n      (err)=>{\n        console.log(err);\n      }\n    );\n  }\n\n  // called when user changes months\n  updateMonth():void{\n    // clear events and set activeDayIsOpen to false\n    this.events = [];\n    this.activeDayIsOpen = false;\n    // get the sessions for the identified month/year\n    this.getSessions();\n  }\n\n  // get groups using session id\n  getGroupsBySessionId(): void{\n    this.authService.getGroupsBySessionId(this.sessionId).subscribe(\n      (data) => {\n          this.groups = data;\n      }\n    );\n  }\n\n  // get sessions for the current month/year for the current user\n  getSessions(): void {\n    this.sessionsArr = null;\n\n    // call auth service getSessions\n    this.authService.getSessions(this.viewDate.getMonth(), this.viewDate.getFullYear()).subscribe(\n      data=>{\n        // for each session retrieved, create an event that will be displayed on calendar\n        if(data.length !== 0){\n          for(let session in data){\n            this.createEvent(data[session].name, data[session].date.day, data[session].date.month, data[session].date.year, data[session]._id);\n            this.refresh.next();\n          }\n        }\n\n      }\n    );\n  }\n\n  // create workout for the currentGroup\n  createWorkout(): void{\n    // call service createWorkout\n    this.authService.createWorkout(this.currentGroup._id, this.tempWorkoutName, this.tempWorkoutSets, this.tempWorkoutReps).subscribe(\n      data => {\n        // add the workout that was returned to group workouts\n        this.clearTempWorkout();\n        this.currentGroup.workouts.push(data);\n      },\n      (err) => {\n        if(err.status == 401){\n          console.log('not authorized');\n          this.authService.signOut();\n        }\n      }\n    );\n  }\n\n\n\n  // create session for the selected date\n  createSession(): void{\n    this.authService.createSession(this.tempSessionName, this.selectedDate.getDate(), this.selectedDate.getMonth(), this.selectedDate.getFullYear()).subscribe(\n      (data) => {\n        // create an event from the session returned from the server\n        this.clearTempSession();\n        this.createEvent(data.name, data.date.day, data.date.month, data.date.year, data._id);\n      },\n      (err) => {\n        if(err.status == 401){\n          console.log('not authorized');\n          this.authService.signOut();\n        }\n      }\n    );\n  }\n\n  // create a group for the selected session\n  createGroup(): void {\n    this.authService.createGroup(this.sessionId, this.tempGroupName, this.tempGroupType).subscribe(\n      data => {\n        // add the group returned from the server to the groups array\n        this.clearTempGroup();\n        this.groups.push(data);\n      },\n      (err) => {\n        if(err.status == 401){\n          console.log('not authorized');\n          this.authService.signOut();\n        }\n      }\n    );\n  }\n\n  // display events to the user when they click on a calendar cell\n  dayClicked(day: CalendarMonthViewDay): void {\n    // if the day clicked on and the viewdate are the same, determine if the events window will be open or closed\n    if (isSameMonth(day.date, this.viewDate)) {\n      // if the the day selected has the events window open or the day has no events, close the events window\n      // else open the events window\n      if ((isSameDay(this.viewDate, day.date) && this.activeDayIsOpen === true) || day.events.length === 0) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n        this.viewDate = day.date;\n      }\n\n      // set the selectedDate to the day that the user clicked\n      this.selectedDate = day.date;\n      this.dayOn = true;\n    }\n\n    // delete the cssclass from the selectedmonthviewday\n    if (this.selectedMonthViewDay) {\n      delete this.selectedMonthViewDay.cssClass;\n    }\n\n    // set the css class for the day clicked on\n    day.cssClass = 'cal-day-selected';\n\n    // set selectedMonthViewDay\n    this.selectedMonthViewDay = day;\n\n    // set selectedDate\n    this.selectedDate = day.date;\n\n    // clear the sessionid and sessionname\n    this.clearSession();\n\n    // empty groups\n    this.groups = null;\n  }\n\n  // called when the month needs to be rendered\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\n    // set up the Calendar\n    // for each cell, determine which cell needs to be highlighted for the user (determined when the user clicks on a calendar cell)\n    body.forEach(day => {\n      if (this.dayOn && day.date.getTime() === this.selectedDate.getTime()){\n        day.cssClass = 'cal-day-selected';\n        this.selectedMonthViewDay = day;\n      } else {\n        day.cssClass = null;\n      }\n    });\n  }\n\n  // set sessionid and sessionname using the event\n  setSession(event: CalendarEvent): void{\n    this.sessionId = event.meta.id;\n    this.sessionName = event.title;\n  }\n\n  // clear sessionid and sessionName\n  clearSession(): void{\n    this.sessionId = null;\n    this.sessionName = null;\n  }\n\n  // clear temp session variables\n  clearTempSession(): void{\n    this.tempSessionName = null;\n  }\n\n  // clear temp group variables\n  clearTempGroup(): void{\n    this.tempGroupName = null;\n    this.tempGroupType = null;\n  }\n\n  clearTempWorkout(): void{\n    this.tempWorkoutName = null;\n    this.tempWorkoutSets = null;\n    this.tempWorkoutReps = null;\n  }\n\n  // create an event that will be displayed on the calendar\n  // parameters coincide with the session variables\n  createEvent(name, day, month, year, id): void {\n    this.events.push({\n      title: name,\n      start: startOfDay(new Date(year, month, day, 0, 0, 0, 0)),\n      end: endOfDay(new Date(year, month, day, 0, 0, 0, 0)),\n      color: colors.red,\n      meta: {\n        id: id\n      },\n      actions: [\n        {\n          label: '<i class=\"fa fa-fw fa-book\"></i>',\n          onClick: ({ event }: { event: CalendarEvent }): void => {\n            this.currentEvent = event;\n            this.setSession(event);\n            this.getGroupsBySessionId();\n          }\n        },\n        {\n          label: '<i class=\"fa fa-fw fa-trash-o\"></i>',\n          onClick: ({ event }: { event: CalendarEvent }): void => {\n            this.sessionId = event.meta.id;\n            this.currentEvent = event;\n            this.removeSession();\n            //this.events = this.events.filter(iEvent => iEvent !== event);\n            console.log('Event deleted', event);\n          }\n        }\n      ]\n    });\n    this.refresh.next();\n  }\n\n  /*\n  Note: methods defined below will be used when the calendar is updated for week and day views\n  */\n  hourSegmentClicked(date: Date) {\n    this.selectedDayViewDate = date;\n    this.addSelectedDayViewClass();\n  }\n\n  beforeDayViewRender(dayView: DayViewHour[]) {\n    this.dayView = dayView;\n    this.addSelectedDayViewClass();\n  }\n\n  private addSelectedDayViewClass() {\n    this.dayView.forEach(hourSegment => {\n      hourSegment.segments.forEach(segment => {\n        delete segment.cssClass;\n        if (\n          this.selectedDayViewDate &&\n          segment.date.getTime() === this.selectedDayViewDate.getTime()\n        ) {\n          segment.cssClass = 'cal-day-selected';\n        }\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/calendar/calendar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".m-top {\\n  margin-top: 60px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container m-top\\\">\\n  <div class=\\\"jumbotron bg-transparent text-center\\\">\\n    <h1 class=\\\"display-3\\\">Gym Logger</h1>\\n    <p class=\\\"lead\\\">Track your workouts with Gym Logger!</p>\\n    <hr class=\\\"my-4\\\">\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/login']\\\">Login/Register</a> \\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","\nimport { Component, OnInit, NgZone} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { UserAuthService } from '../../services/auth/user-auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n  constructor(private authService: UserAuthService,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bg-transparent {\\n  background-color: transparent;\\n}\\n\\n:host {\\n  height: 100%;\\n}\\n\\n.photo {\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n}\\n\\n.card {\\n  width: 20rem;\\n  margin: 0 auto;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-transparent text-center\\\">\\n  <div *ngIf=\\\"!userAuthService.user\\\" class=\\\"card text-center\\\">\\n    <h6 class=\\\"card-header\\\">\\n      Log In\\n    </h6>\\n    <div class=\\\"card-block\\\">\\n    </div>\\n    <div class=\\\"card-block\\\">\\n      <button class=\\\"btn btn-social-icon btn-google\\\" (click)=\\\"userAuthService.signInWithGoogle()\\\"><img [src]=\\\"googleSignInImg\\\"></button>\\n      <!--<button class=\\\"btn btn-social-icon btn-facebook\\\" (click)=\\\"userAuthService.signInWithFB()\\\"><span class=\\\"fa fa-facebook fa-5x\\\"></span></button>-->\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserAuthService } from '../../services/auth/user-auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  private googleSignInImg: String;\n\n  constructor(\n    private userAuthService: UserAuthService) {\n\n      this.googleSignInImg = '../../assets/btn_google_signin_light_normal_web.png';\n  }\n\n  ngOnInit(){\n    this.userAuthService.startService();\n  }\n\n  ngAfterViewInit(){\n\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .m-top{\\n    margin-top: 60px;\\n  }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/logout/logout.component.css\n// module id = ../../../../../src/app/components/logout/logout.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container m-top text-center\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" (click)=\\\"signOut()\\\">Sign Out</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/logout/logout.component.html\n// module id = ../../../../../src/app/components/logout/logout.component.html\n// module chunks = main","import { Component, OnInit, NgZone } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserAuthService } from '../../services/auth/user-auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private authService: UserAuthService, private router: Router, private zone: NgZone) { }\n\n  ngOnInit() {\n\n  }\n  signOut() {\n\n    this.authService.signOut();\n\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/logout/logout.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" >\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!authService.loggedIn\\\"[routerLink]=\\\"['/']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!authService.loggedIn\\\" [routerLink]=\\\"['/login']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Log In</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn\\\" [routerLink]=\\\"['/profile']\\\" routerLinkActive=\\\"active-link\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn\\\" [routerLink]=\\\"['/calendar']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Calendar</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn\\\" [routerLink]=\\\"['/logout']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Log Out</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserAuthService } from '../../services/auth/user-auth.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: UserAuthService) { }\n\n  ngOnInit() {\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bg-transparent {\\n  background-color: transparent;\\n}\\n\\n:host {\\n  height: 100%;\\n}\\n\\n.photo {\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n}\\n\\n.card {\\n  width: 20rem;\\n  margin: 0 auto;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron bg-transparent text-center\\\">\\n    <div *ngIf=\\\"authService.serverUser\\\" class=\\\"card text-center\\\">\\n      <h6 class=\\\"card-header\\\">\\n        User Profile\\n      </h6>\\n      <div class=\\\"card-block\\\"></div>\\n      <img class=\\\"card-img-top img-responsive photo\\\" src=\\\"{{ authService.user.photoUrl }}\\\">\\n      <div class=\\\"card-block\\\">\\n        <h4 class=\\\"card-title\\\">{{ authService.serverUser.email }}</h4>\\n        <p class=\\\"card-text\\\">{{ authService.serverUser.firstName }} {{ authService.serverUser.lastName }}</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserAuthService } from '../../services/auth/user-auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private authService: UserAuthService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/components/profile/profile.component.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { UserAuthService } from '../services/auth/user-auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService:UserAuthService,\n    private router:Router){\n\n  }\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n\n    if(this.authService.loggedIn){\n      return true;\n    } else {\n      //window.alert(\"Sign in to view this page.\");\n      //this.router.navigate(['/login']);\n      return false;\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\nimport { AuthService } from \"angularx-social-login\";\nimport { SocialUser } from 'angularx-social-login';\nimport { GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { User } from '../../models/users';\nimport { Session } from '../../models/sessions';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\n@Injectable()\nexport class UserAuthService {\n\n  user: SocialUser; // set by google/facebook\n  loggedIn: boolean = false;\n  serverUser: User; // set by server after successful authentication, needed to make requests for specific user\n\n  createSessionURL = 'session/createSession';\n  createGroupURL = 'session/createGroup'\n  createWorkoutURL = 'session/createWorkout';\n  getSessionURL = 'session/getSessionsByUserId';\n  //getGroupsURL = 'session/getGroupsBySessionId';\n  //getWorkoutsURL = 'session/getWorkoutsByGroupId';\n  getGroupsBySessionURL = 'session/getGroupsBySessionId';\n  getUserURL = 'auth/google/getUserByUserId';\n\n  removeSessionURL = 'session/removeSession';\n  removeWorkoutURL = 'session/removeWorkout';\n  removeGroupURL = 'session/removeGroup';\n  updateSessionURL = 'session/updateSession';\n  updateWorkoutURL = 'session/updateWorkout';\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private http: HttpClient\n  ) { }\n\n  userExists(): boolean{\n    if (this.user) {\n      return true;\n    } else {\n      return false;\n    }\n\n    //console.log(this.serverUser);\n  }\n\n  // check if the user is authenticated to gain access\n  startService() {\n    this.authService.authState.subscribe(\n      (user) => {\n          this.user = user;\n          if(this.user){\n            this.loggedIn = true;\n            localStorage.setItem('accessToken', user.authToken);\n            this.loadUser();\n          }\n      },\n      (error) => {\n        console.log('error getting user');\n        console.log(error);\n      }\n    );\n  }\n\n  loadUser(): void {\n    this.getUser().subscribe(\n      (data) => {\n        if(data){\n          this.serverUser = data[0];\n          this.router.navigate(['/calendar']);\n\n        }\n      },\n      (err) => {\n        if(err.status == 401){\n          console.log('not authorized');\n          this.signOut();\n        }\n      }\n    );\n  }\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  //retrieve the user from the server\n  getUser(): Observable<any> {\n\n    return this.http.post(this.getUserURL,{\n      'firstName': this.user.firstName,\n      'lastName' : this.user.lastName,\n      'email': this.user.email,\n      'provider': this.user.provider,\n      'userId': this.user.id\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n\n  // create session using day month year\n  createSession(name: String, day: Number, month: Number, year: Number): Observable<any> {\n    return this.http.post(this.createSessionURL,{\n      '_id': this.serverUser._id,\n      'name': name,\n      'date' : {'day': day, 'month': month, 'year': year}\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n  // create group\n  createGroup(sessionId, name, type): Observable<any> {\n    return this.http.post(this.createGroupURL,{\n      'id': sessionId,\n      'name': name,\n      'type' : type\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n  // create workout\n  createWorkout(groupId, name, sets, reps): Observable<any> {\n    return this.http.post(this.createWorkoutURL,{\n      'groupId': groupId,\n      'type': 'Boulder',\n      'name': name,\n      'sets': sets,\n      'reps': reps\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n  // retrieve sessions\n  getSessions(month: number, year: number): Observable<any>{\n\n    return this.http.get(this.getSessionURL,{\n        headers: new HttpHeaders().set('Access_token', localStorage.getItem('accessToken')),\n        params: new HttpParams().set('id', this.serverUser._id.toString()).set('month', month.toString()).set('year', year.toString())\n      }\n    )\n  }\n\n  // retrieve groups using session id\n  getGroupsBySessionId(sessionId): Observable<any>{\n    return this.http.get(this.getGroupsBySessionURL,\n      {\n        headers: new HttpHeaders().set('Access_token', localStorage.getItem('accessToken')),\n        params: new HttpParams().set('id', sessionId)\n      }\n    )\n  }\n\n  // updateSession\n  updateSession(id, name): Observable<any> {\n    return this.http.post(this.updateSessionURL,{\n      'updatedName': name,\n      'id': id\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n  // updateSession\n  removeSession(id): Observable<any> {\n    return this.http.delete(this.removeSessionURL, {\n      headers: new HttpHeaders().set('Access_token', localStorage.getItem('accessToken')),\n      params: new HttpParams().set('id', id)\n    })\n  }\n\n  removeGroup(sessionId, groupId): Observable<any> {\n    return this.http.post(this.removeGroupURL, {\n      'sessionId': sessionId,\n      'groupId': groupId\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n  // updateSession\n  removeWorkout(id): Observable<any> {\n    return this.http.post(this.removeWorkoutURL, {\n      'id': id\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n  // updateSession\n  updateWorkout(id:string, name:string, sets:number, reps:number): Observable<any> {\n    return this.http.post(this.updateWorkoutURL,{\n      'id': id,\n      'updatedName': name,\n      'updatedSets': sets,\n      'updatedReps': reps\n    }, {headers: {\n      'Content-Type':'application/json',\n      'Access_token': localStorage.getItem('accessToken')}}\n    );\n  }\n\n  // sign the user out\n  signOut(): void {\n    this.authService.signOut().then(\n      () => {\n        console.log('signed out');\n        localStorage.clear();\n        this.loggedIn = false;\n        this.serverUser = null;\n        this.user = null;\n        this.router.navigate(['/']);\n      }\n    );\n  }\n\n  /*\n  facebook sign in will be implemented at a later date\n  */\n  // sign in using facebook\n  signInWithFB(): void {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/app/services/auth/user-auth.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/environments/environment.ts","import './polyfills.ts';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/main.ts","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/weak-map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es7/reflect';\n\n\n/**\n * Required to support Web Animations `@angular/platform-browser/animations`.\n * Needed for: All but Chrome, Firefox and Opera. http://caniuse.com/#feat=web-animation\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n\n\n// WEBPACK FOOTER //\n// /Users/stevenha/Documents/web_projects/GymLogger/gym-logger/src/polyfills.ts"],"sourceRoot":"webpack:///"}